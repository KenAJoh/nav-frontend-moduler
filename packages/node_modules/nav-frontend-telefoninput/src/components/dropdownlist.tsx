import * as classNames from 'classnames';
import * as React from 'react';
import { Country } from '../telefoninput-types';
import { Input } from 'nav-frontend-skjema';

interface Props {
    enableSearchField: boolean;
    searchPlaceholder?: string;
    preferredCountries: Country[];
    highlightCountryIndex: number;
    showDropdown: boolean;
    searchValue: string;
    selectedCountry: Country;
    filterCountriesBySearch: () => Country[];
    handleFlagItemClick: (country: Country) => void;
    getDropdownCountryName: (country: Country) => string;
    handleSearchChange: (e) => void;
    handleKeydown: (e) => void;
    setDropdownRef: (e) => void;
    setFlagRef: (e, index: number) => void;
}

const dropdownlist = (props: Props) => {
    const {
        enableSearchField,
        searchPlaceholder,
        preferredCountries,
        highlightCountryIndex,
        showDropdown,
        searchValue,
        selectedCountry,
        filterCountriesBySearch,
        handleFlagItemClick,
        getDropdownCountryName,
        handleSearchChange,
        handleKeydown,
        setDropdownRef,
        setFlagRef
    } = props;

    const countryIsPreferred = preferredCountries.includes(selectedCountry);
    const filteredCountries = filterCountriesBySearch();
    const countryDropdownList = filteredCountries.map((country, index) => {
        const itemClasses = classNames({
            country: true,
            preferred: country.iso2 === 'us' || country.iso2 === 'gb',
            active: country.iso2 === 'us',
            highlight: countryIsPreferred
               ? highlightCountryIndex === index
               : highlightCountryIndex ===
               index - preferredCountries.length
        });

        const inputFlagClasses = `flag ${country.iso2}`;
        const key = `flag_no_${index}`;

        const flagRef = (el) => {
            setFlagRef(el, index);
        };

        return (
            // tslint:disable-next-statement
            <li
                key={key}
                role={'button'}
                ref={flagRef}
                data-flag-key={`flag_no_${index}`}
                className={itemClasses}
                data-dial-code="1"
                data-country-code={country.iso2}
                onClick={() => handleFlagItemClick(country)}
            >
                <div className={inputFlagClasses} />
                <span className="country-name">
                        {getDropdownCountryName(country)}
                    </span>
                <span className="dial-code">{`+${country.dialCode}`}</span>
            </li>
        );
    });

    const dashedLi = <li key={'dashes'} className="divider" />;

    // let's insert a dashed line in between preffered countries and the rest
    if (preferredCountries.length > 0) {
        countryDropdownList.splice(preferredCountries.length, 0, dashedLi);
    }

    const dropDownClasses = classNames({
        'flag-dropdown__content': true,
        hide: !showDropdown
    });

    return (
        <div className={dropDownClasses}>
            {enableSearchField && (
                <div className={classNames({ search: true })}>
                    <Input
                        autoFocus
                        tabIndex={0}
                        label={''}
                        id="search-box"
                        className={classNames({ 'search-box': true })}
                        type="search"
                        placeholder={searchPlaceholder}
                        value={searchValue}
                        onChange={handleSearchChange}
                    />
                </div>
            )}
            <div
                tabIndex={0}
                role={'button'}
                className="country-list"
                ref={setDropdownRef}
                onKeyDown={handleKeydown}
            >
                <ul>
                    {countryDropdownList.length > 0 ? (
                        countryDropdownList
                    ) : (
                        <li className="no-entries-message">
                            <span>Ingen land funnet.</span>
                        </li>
                    )}
                </ul>
            </div>
        </div>
    );
}

export default dropdownlist;

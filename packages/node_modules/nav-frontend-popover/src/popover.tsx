import * as React from 'react';
import * as PT from 'prop-types';
import * as classnames from 'classnames';
import {
    Manager,
    Reference,
    Popper,
    PopperProps,
    PopperArrowProps
} from 'react-popper';
import { placements } from 'react-popper/lib/esm/index.js';

import 'nav-frontend-popover-style';

export interface PopoverProps {
    /**
     * Egendefinert klassenavn.
     */
    className?: string;
    /**
     * Rendrer en popover uten pil og uten margin til
     */
    utenPil?: boolean;
    /**
     * Props til pil-element, se <a href="https://github.com/FezVrasta/react-popper#children">react-popper docs</a>.
     */
    pilProps?: PopperArrowProps;
    /**
     * Referanse til intern <div>.
     */
    innerRef?: () => any;
    /**
     * Bestemmer posisjon av pil i forhold til Popover. St√∏tter alle <a href="https://github.com/FezVrasta/popper.js/blob/master/packages/popper/src/methods/placements.js">'placement'-verdiene i PopperJS</a>.
     */
    orientering?: placements;
}

const popoverCls = (props) => classnames('popover', props.className, `popover--${props.orientering}`, {
    'popover--utenPil': props.utenPil
});

class Popover extends React.Component<PopoverProps> {
    static defaultProps: Partial<PopoverProps> = {
        orientering: 'top'
    };

    render() {
        const { children, className, utenPil, pilProps, innerRef, orientering, ...rest } = this.props;
        return (
            <div
                className={popoverCls(this.props)}
                ref={innerRef}
                onClick={(e) => e.stopPropagation()}
                {...rest}
            >
                <div className="popover__inner">{children}</div>
                {
                    !utenPil &&
                    <div className="popover__pil" {...pilProps} />
                }
            </div>
        );
    }
}

(Popover as React.ComponentClass).propTypes = {
    /**
     * Egendefinert klassenavn.
     */
    className: PT.string
};

export default Popover;
export { Manager, Reference, Popper };

import * as React from 'react';
import { guid, omit } from 'nav-frontend-js-utils';

import Tab from './tab';
import TabsPure, { TabsPureProps } from './tabs-pure';

import 'nav-frontend-tabs-style';

export interface TabsProps extends TabsPureProps {
    /**
     * Påkrevd callback for når state endrer seg etter klikk
     */
    onChange: (event: React.SyntheticEvent<EventTarget>, index: number) => void;
    /**
     * Default aktiv tab index
     */
    defaultAktiv?: number;
}

export interface TabsState {
    aktivTab: number;
}

class Tabs extends React.Component<TabsProps, TabsState> {

    private pure: TabsPure;
    static Tab = Tab;

    static defaultProps: Partial<TabsProps> = {
        kompakt: false,
        defaultAktiv: 0
    };

    constructor(props) {
        super(props);
        this.state = {
            aktivTab: props.defaultAktiv
        };
    }

    setActiveTab(e, index) {
        this.setState({ aktivTab: index }, () => {
            this.pure.linkRefs[index].focus();
        });
        this.props.onChange ? this.props.onChange(e, index) : null;
    }

    renderContent() {
        return React.Children.map(this.props.children, (child: any, i) => (child.type.name == Tab.name && i === this.state.aktivTab) && child.props.children);
    }

    renderTabs() {
        return React.Children.map(this.props.children, (child: any, i) => {
            return child.type.name == Tab.name && React.cloneElement(child as React.ReactElement<any>, {
                aktiv: (i === this.state.aktivTab)
            });
        });
    }

    render() {
        const domProps = omit(this.props, 'onChange', 'defaultAktiv', 'ref');

        return (
            <>
                <TabsPure
                    ref={(pure: TabsPure) => this.pure = pure}
                    onChange={(e, index) => this.setActiveTab(e, index)}
                    {...domProps}
                >
                    {this.renderTabs()}
                </TabsPure>
                {this.renderContent()}
            </>
        );
    }
}

export default Tabs;
export { default as TabsPure } from './tabs-pure';
export { default as Tab } from './tab';
